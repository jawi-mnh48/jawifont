#
# Small letters
#

# In Quranic orthography, there are two forms of dagger alef; a superscript one
# that is a combining mark and a spacing one that is regular alef letter, the
# later is represented in Unicode by using NBSP (for isolated) or Kashida (for
# medial) before the combining mark.
#
# Other small letters have an encoded isolated form and only need medial form
# with kashida.

# Substitute combining small letters by the spacing ones.
feature ccmp {
  sub uni00A0'   uni0670' by uni0670.isol;
  sub @aKashida' uni0670' by uni0670.medi;
  sub @aKashida' uni06E7' by uni06E7.medi;
  sub @aKashida' uni08F3' by uni08F3.medi;
} ccmp;

#
# Floating hamza
#

# Hamza should be shaping transparent, just like combining marks, while still
# not a combining marks, I call t floating hamza because it "floats" between
# adjacent letters. When a hamza comes between two letters that would normally
# join, it will be placed between them over a connecting stroke, else it will
# just set on the baseline.
#
# This is not recognized by Unicode, so we have to hack our way in the font to
# override shaping decisions by OpenType engine.
#
# Since the layout engine considers hamza non-joiner, it will break joining
# around it, so we simply override this by replacing glyphs around the hamza
# with the forms that they would normally take if it was not there, and replace
# the hamza wit its medial glyph that has a connecting stroke.

@before.isol = [uni0626 uni0628 uni062A uni062B uni062C uni062D uni062E uni0633
                uni0634 uni0635 uni0636 uni0637 uni0638 uni0639 uni063A uni0641
                uni0642 uni0643 uni0644 uni0645 uni0646 uni0647 uni0649 uni064A
                uni06CC];
@before.init = [uni0626.init uni0628.init uni062A.init uni062B.init uni062C.init
                uni062D.init uni062E.init uni0633.init uni0634.init uni0635.init
                uni0636.init uni0637.init uni0638.init uni0639.init uni063A.init
                uni0641.init uni0642.init uni0643.init uni0644.init uni0645.init
                uni0646.init uni0647.init uni0649.init uni064A.init uni06CC.init];
@before.medi = [uni0626.medi uni0628.medi uni062A.medi uni062B.medi uni062C.medi
                uni062D.medi uni062E.medi uni0633.medi uni0634.medi uni0635.medi
                uni0636.medi uni0637.medi uni0638.medi uni0639.medi uni063A.medi
                uni0641.medi uni0642.medi uni0643.medi uni0644.medi uni0645.medi
                uni0646.medi uni0647.medi uni0649.medi uni064A.medi uni06CC.medi];
@before.fina = [uni0626.fina uni0628.fina uni062A.fina uni062B.fina uni062C.fina
                uni062D.fina uni062E.fina uni0633.fina uni0634.fina uni0635.fina
                uni0636.fina uni0637.fina uni0638.fina uni0639.fina uni063A.fina
                uni0641.fina uni0642.fina uni0643.fina uni0644.fina uni0645.fina
                uni0646.fina uni0647.fina uni0649.fina uni064A.fina uni06CC.fina];

@after.isol =  [uni0622 uni0623 uni0624 uni0625 uni0627 uni0629 uni062F uni0630
                uni0631 uni0632 uni0648];
@after.fina =  [uni0622.fina uni0623.fina uni0624.fina uni0625.fina uni0627.fina
                uni0629.fina uni062F.fina uni0630.fina uni0631.fina uni0632.fina
                uni0648.fina];

@before = [@aKashida uni0670.medi uni06E7.medi uni08F3.medi @before.isol
           @before.fina];
@after  = [@aKashida uni0670.medi uni06E7.medi uni08F3.medi
           uni0627.fina_Tatweel @after.isol @before.isol @before.init];

lookup Before {
  sub @before.isol by @before.init;
  sub @before.fina by @before.medi;
} Before;

lookup After {
  sub @before.isol by @before.fina;
  sub @after.isol  by @after.fina;
  sub @before.init by @before.medi;
} After;

lookup MedialHAmza {
  sub uni0621 by uni0621.medi;
} MedialHAmza;

lookup FloatingHamza {
  sub uni0621 by uni0621.float;
} FloatingHamza;

lookup LamAlefIsol {
  sub uni0644 by uni0644.init_LamAlfIsol;
  sub uni0627 by uni0627.fina_LamAlfIsol;
} LamAlefIsol;

lookup LamAlefFina {
  sub uni0644.fina by uni0644.medi_LamAlfFina;
  sub uni0627      by uni0627.fina_LamAlfFina;
} LamAlefFina;

feature calt {
  lookupflag IgnoreMarks;
  # hamza between lam and alef needs special treatment as it should not have
  # a connecting stroke to avoid breaking lam-alef.
  sub uni0644'      lookup LamAlefIsol
      uni0621'      lookup FloatingHamza
      uni0627'      lookup LamAlefIsol;

  sub uni0644.fina' lookup LamAlefFina
      uni0621'      lookup FloatingHamza
      uni0627'      lookup LamAlefFina;

  # Medial hamza.
  sub @before'      lookup Before
      uni0621'      lookup MedialHAmza
      @after'       lookup After;
} calt;

# kern floating hamza between final lam-alef to avoid glyph overlap
feature kern {
  lookupflag IgnoreMarks;
  pos uni0621.float' <-146 0 0 0> @aAlf.fina_LamAlfFina;
} kern;

#ifdef QURAN
# If a hamza on yaa or waw is followed by kasra, the hamza goes bellow
lookup hamzakasra {
  sub uni0626.init by uni0649.init uni0655; # yaa
  sub uni0626.medi by uni0649.medi uni0655;
  sub uni0626.fina by uni0649.fina uni0655;
  sub uni0626      by uni0649      uni0655;
  sub uni0624.fina by uni0648.fina uni0655; # waw
  sub uni0624      by uni0648      uni0655;
} hamzakasra;

feature calt {
# lookupflag IgnoreMarks;
  sub [uni0626 uni0626.init uni0626.medi uni0626.fina uni0624 uni0624.fina]' lookup hamzakasra
      [uni0650 uni064D uni08F2];
} calt;
#endif

# small waw after isolated/final heh is lower than usual, so we use an
# alternate glyph for that
feature calt {
  lookupflag IgnoreMarks;
  sub [@aHeh.isol @aHeh.fina] [uni06E5]' by [uni06E5.low];
} calt;

# some glyphs need more room to accommodate madda mark, so we change the advance
# width on fly.
feature mark {
  # small waw
  pos [uni06E5.low]' <24 0 122 0> [uni06E4];

  # alef
  pos [uni0627.fina uni0627.fina_Wide uni0627.fina_KafMemAlf uni0627.fina_MemAlfFina]' <122 0 122 0> [uni06E4];
  pos [uni0627.fina uni0627.fina_Wide uni0627.fina_KafMemAlf uni0627.fina_MemAlfFina]' <171 0 171 0> [uni0653];
  pos [uni0627]' <73 0 146 0> [uni06E4];
} mark;
